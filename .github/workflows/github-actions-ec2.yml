name: Build-Test-Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2 # Use a version that is compatible with Node.js 20

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install  # Replace with your actual dependency installation command

      - name: Build project
        run: |
          # Add your build commands here
          # Example: npm run build, etc.

  test:
    name: Test
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2 # Use a version that is compatible with Node.js 20

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install  # Replace with your actual dependency installation command
      
      - name: Test website availability
        run: |
          echo "Test will be added "
      



  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest

    needs: [build, test]

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2 # Use a version that is compatible with Node.js 20

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install  # Replace with your actual dependency installation command

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Add your deployment commands here
            # Example: update server, restart services, etc.
            sudo apt-get -y update
            sudo apt-get install -y apache2
            sudo systemctl start apache2
            sudo systemctl enable apache2
            cd /var/www/html
            sudo mv * /var/www/html
